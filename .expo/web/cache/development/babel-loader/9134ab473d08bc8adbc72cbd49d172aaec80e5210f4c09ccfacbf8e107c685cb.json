{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var handleLogin = function handleLogin() {\n    if (email === 'user' && password === 'password') {\n      navigation.navigate('Dashboard');\n    } else {\n      setError('Invalid email or password');\n    }\n  };\n  var handleRegisterPress = function handleRegisterPress() {\n    navigation.navigate('Register');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), error && _jsx(Text, {\n      style: styles.error,\n      children: error\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Button, {\n      style: styles.input,\n      title: \"Login\",\n      onPress: handleLogin\n    }), _jsx(TouchableOpacity, {\n      onPress: handleRegisterPress,\n      children: _jsx(Text, {\n        style: styles.registerButton,\n        children: \"Register\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16,\n    marginTop: 10\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    marginBottom: 16,\n    paddingLeft: 8\n  },\n  error: {\n    color: 'red',\n    marginBottom: 16\n  },\n  registerButton: {\n    color: 'blue',\n    marginTop: 16,\n    textAlign: 'center',\n    fontSize: 16\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","handleLogin","navigate","handleRegisterPress","style","styles","container","children","title","input","placeholder","value","onChangeText","text","secureTextEntry","onPress","registerButton","create","flex","justifyContent","padding","marginTop","fontSize","fontWeight","marginBottom","height","borderColor","borderWidth","borderRadius","paddingLeft","color","textAlign"],"sources":["/workspaces/StockboardReactNative/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet,TouchableOpacity } from 'react-native';\n\nconst Login = ({navigation}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = () => {\n    // Replace this with your actual authentication logic\n    // For simplicity, we'll just check if the email and password match a hardcoded value\n    if (email === 'user' && password === 'password') {\n      // Authentication successful\n      navigation.navigate('Dashboard');\n      // alert('Login successful!');\n      // You may also navigate to another screen or update the state accordingly\n    } else {\n      // Authentication failed\n      setError('Invalid email or password');\n    }\n  };\n  const handleRegisterPress = () => {\n    navigation.navigate('Register');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Login</Text>\n      {error && <Text style={styles.error}>{error}</Text>}\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry\n        value={password}\n        onChangeText={(text) => setPassword(text)}\n      />\n      <Button style={styles.input} title=\"Login\" onPress={handleLogin} />\n      <TouchableOpacity onPress={handleRegisterPress}>\n        <Text style={styles.registerButton}>Register</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16,\n    marginTop:10,\n    \n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius:8,\n    marginBottom: 16,\n    paddingLeft: 8,\n  },\n  error: {\n    color: 'red',\n    marginBottom: 16,\n  },\n  registerButton: {\n    color: 'blue',\n    marginTop: 16,\n    textAlign: 'center',\n    fontSize: 16,\n  },\n});\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACxB,IAAAC,SAAA,GAA0Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA0BvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAGxB,IAAIV,KAAK,KAAK,MAAM,IAAII,QAAQ,KAAK,UAAU,EAAE;MAE/CR,UAAU,CAACe,QAAQ,CAAC,WAAW,CAAC;IAGlC,CAAC,MAAM;MAELF,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EACD,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChChB,UAAU,CAACe,QAAQ,CAAC,UAAU,CAAC;EACjC,CAAC;EAED,OACElB,KAAA,CAACT,IAAI;IAAC6B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BzB,IAAA,CAACJ,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAK,CAAM,CAAC,EACtCR,KAAK,IAAIjB,IAAA,CAACJ,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACN,KAAM;MAAAQ,QAAA,EAAER;IAAK,CAAO,CAAC,EACnDjB,IAAA,CAACN,SAAS;MACR4B,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEpB,KAAM;MACbqB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKrB,QAAQ,CAACqB,IAAI,CAAC;MAAA;IAAC,CACxC,CAAC,EACF/B,IAAA,CAACN,SAAS;MACR4B,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBI,eAAe;MACfH,KAAK,EAAEhB,QAAS;MAChBiB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKjB,WAAW,CAACiB,IAAI,CAAC;MAAA;IAAC,CAC3C,CAAC,EACF/B,IAAA,CAACL,MAAM;MAAC2B,KAAK,EAAEC,MAAM,CAACI,KAAM;MAACD,KAAK,EAAC,OAAO;MAACO,OAAO,EAAEd;IAAY,CAAE,CAAC,EACnEnB,IAAA,CAACF,gBAAgB;MAACmC,OAAO,EAAEZ,mBAAoB;MAAAI,QAAA,EAC7CzB,IAAA,CAACJ,IAAI;QAAC0B,KAAK,EAAEC,MAAM,CAACW,cAAe;QAAAT,QAAA,EAAC;MAAQ,CAAM;IAAC,CACnC,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAG1B,UAAU,CAACsC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAC;EAEZ,CAAC;EACDb,KAAK,EAAE;IACLc,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDf,KAAK,EAAE;IACLgB,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAC,CAAC;IACdJ,YAAY,EAAE,EAAE;IAChBK,WAAW,EAAE;EACf,CAAC;EACD9B,KAAK,EAAE;IACL+B,KAAK,EAAE,KAAK;IACZN,YAAY,EAAE;EAChB,CAAC;EACDR,cAAc,EAAE;IACdc,KAAK,EAAE,MAAM;IACbT,SAAS,EAAE,EAAE;IACbU,SAAS,EAAE,QAAQ;IACnBT,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAerC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}