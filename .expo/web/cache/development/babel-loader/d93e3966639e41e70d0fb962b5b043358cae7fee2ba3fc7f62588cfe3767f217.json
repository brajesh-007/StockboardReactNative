{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { LineChart, XAxis, YAxis, CartesianGrid, Line, Tooltip } from 'react-native-svg-charts';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    stockData1 = _useState2[0],\n    setStockData1 = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stockData2 = _useState4[0],\n    setStockData2 = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchQuery = _useState6[0],\n    setSearchQuery = _useState6[1];\n  useEffect(function () {\n    fetchData('msft');\n  }, []);\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* (symbol) {\n      try {\n        var response1 = yield fetch(`https://api.iex.cloud/v1/data/core/historical_prices/${symbol}?range=2m&token=pk_92e729c5b8074e11bdff1bb53bb9d0ff`);\n        var data1 = yield response1.json();\n        setStockData1(data1);\n        var response2 = yield fetch(`https://api.iex.cloud/v1/data/CORE/QUOTE/${symbol}?token=pk_92e729c5b8074e11bdff1bb53bb9d0ff`);\n        var data2 = yield response2.json();\n        setStockData2(data2);\n      } catch (error) {\n        console.error('Error fetching stock data:', error);\n      }\n    });\n    return function fetchData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleSearch = function handleSearch() {\n    fetchData(searchQuery);\n  };\n  var formattedData1 = stockData1.map(function (item) {\n    return {\n      date: item.priceDate,\n      close: item.close\n    };\n  });\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsxs(View, {\n      style: styles.searchContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Search for a stock\",\n        value: searchQuery,\n        onChangeText: function onChangeText(text) {\n          return setSearchQuery(text);\n        }\n      }), _jsx(Button, {\n        title: \"Search\",\n        onPress: handleSearch\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Stock Market Basic Dashboard\"\n      })]\n    }), _jsxs(View, {\n      style: styles.chartContainer,\n      children: [_jsx(Text, {\n        style: styles.companyName,\n        children: stockData2.length > 0 ? stockData2[0].companyName : \"Data Not Available\"\n      }), _jsxs(LineChart, {\n        style: {\n          flex: 1\n        },\n        data: formattedData1.reverse(),\n        svg: {\n          stroke: 'rgb(134, 132, 132)'\n        },\n        contentInset: {\n          top: 20,\n          bottom: 20\n        },\n        children: [_jsx(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }), _jsx(XAxis, {\n          data: formattedData1.map(function (item) {\n            return item.date;\n          })\n        }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, {\n          type: \"monotone\",\n          dataKey: \"close\",\n          stroke: \"#8884d8\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.infoContainer,\n      children: [_jsx(Text, {\n        style: styles.companyName,\n        children: stockData2.length > 0 ? stockData2[0].companyName : \"Data Not Available\"\n      }), _jsxs(View, {\n        style: styles.table,\n        children: [_jsx(TableRow, {\n          title: \"Open\",\n          value: stockData2.length > 0 ? stockData2[0].companyName : \"Data Not Available\"\n        }), _jsx(TableRow, {\n          title: \"Close\",\n          value: stockData2.length > 0 ? stockData2[0].close : \"Data Not Available\"\n        }), _jsx(TableRow, {\n          title: \"Change\",\n          value: stockData2.length > 0 ? stockData2[0].change : \"Data Not Available\"\n        }), _jsx(TableRow, {\n          title: \"Percentage Change\",\n          value: stockData2.length > 0 ? stockData2[0].changePercentage : \"Data Not Available\"\n        }), _jsx(TableRow, {\n          title: \"High\",\n          value: stockData2.length > 0 ? stockData2[0].high : \"Data Not Available\"\n        }), _jsx(TableRow, {\n          title: \"Low\",\n          value: stockData2.length > 0 ? stockData2[0].low : \"Data Not Available\"\n        }), _jsx(TableRow, {\n          title: \"Latest Time\",\n          value: stockData2.length > 0 ? stockData2[0].latestTime : \"Data Not Available\"\n        }), _jsx(TableRow, {\n          title: \"Latest Price\",\n          value: stockData2.length > 0 ? stockData2[0].latestPrice : \"Data Not Available\"\n        }), _jsx(TableRow, {\n          title: \"Currency\",\n          value: stockData2.length > 0 ? stockData2[0].currency : \"Data Not Available\"\n        })]\n      })]\n    })]\n  });\n};\nvar TableRow = function TableRow(_ref2) {\n  var title = _ref2.title,\n    value = _ref2.value;\n  return _jsxs(View, {\n    style: styles.tableRow,\n    children: [_jsx(Text, {\n      style: styles.tableCell,\n      children: title\n    }), _jsx(Text, {\n      style: styles.tableCell,\n      children: value\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16\n  },\n  searchContainer: {\n    marginBottom: 20\n  },\n  input: {\n    padding: 10,\n    marginRight: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 8\n  },\n  title: {\n    color: 'green',\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10\n  },\n  chartContainer: {\n    flex: 1,\n    minHeight: 400,\n    backgroundColor: '#fff',\n    padding: 15,\n    borderRadius: 8,\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 8,\n    shadowOpacity: 1,\n    marginBottom: 20\n  },\n  infoContainer: {\n    flex: 1,\n    minHeight: 400,\n    backgroundColor: '#fff',\n    padding: 15,\n    borderRadius: 8,\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 8,\n    shadowOpacity: 1\n  },\n  companyName: {\n    color: 'green',\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginBottom: 10\n  },\n  table: {\n    marginTop: 10\n  },\n  tableRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    paddingVertical: 8\n  },\n  tableCell: {\n    flex: 1,\n    textAlign: 'left'\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","TextInput","Button","StyleSheet","ScrollView","LineChart","XAxis","YAxis","CartesianGrid","Line","Tooltip","jsx","_jsx","jsxs","_jsxs","Dashboard","_useState","_useState2","_slicedToArray","stockData1","setStockData1","_useState3","_useState4","stockData2","setStockData2","_useState5","_useState6","searchQuery","setSearchQuery","fetchData","_ref","_asyncToGenerator","symbol","response1","fetch","data1","json","response2","data2","error","console","_x","apply","arguments","handleSearch","formattedData1","map","item","date","priceDate","close","contentContainerStyle","styles","container","children","style","searchContainer","input","placeholder","value","onChangeText","text","title","onPress","chartContainer","companyName","length","flex","data","reverse","svg","stroke","contentInset","top","bottom","strokeDasharray","type","dataKey","infoContainer","table","TableRow","change","changePercentage","high","low","latestTime","latestPrice","currency","_ref2","tableRow","tableCell","create","padding","marginBottom","marginRight","borderColor","borderWidth","borderRadius","color","fontWeight","fontSize","marginTop","minHeight","backgroundColor","shadowColor","shadowOffset","width","height","shadowRadius","shadowOpacity","flexDirection","justifyContent","borderBottomWidth","borderBottomColor","paddingVertical","textAlign"],"sources":["/workspaces/StockboardReactNative/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport { LineChart, XAxis, YAxis, CartesianGrid, Line, Tooltip } from 'react-native-svg-charts';\n\nconst Dashboard = () => {\n  const [stockData1, setStockData1] = useState([]);\n  const [stockData2, setStockData2] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    // Fetch your initial stock data\n    fetchData('msft'); // Replace with your default stock symbol\n  }, []);\n\n  const fetchData = async (symbol) => {\n    try {\n      const response1 = await fetch(`https://api.iex.cloud/v1/data/core/historical_prices/${symbol}?range=2m&token=pk_92e729c5b8074e11bdff1bb53bb9d0ff`);\n      const data1 = await response1.json();\n      setStockData1(data1);\n      const response2 = await fetch(`https://api.iex.cloud/v1/data/CORE/QUOTE/${symbol}?token=pk_92e729c5b8074e11bdff1bb53bb9d0ff`);\n      const data2 = await response2.json();\n      setStockData2(data2);\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n    }\n  };\n\n  const handleSearch = () => {\n    fetchData(searchQuery);\n  };\n\n  const formattedData1 = stockData1.map(item => ({\n    date: item.priceDate,\n    close: item.close,\n  }));\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <View style={styles.searchContainer}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Search for a stock\"\n          value={searchQuery}\n          onChangeText={(text) => setSearchQuery(text)}\n        />\n        <Button title=\"Search\" onPress={handleSearch} />\n        <Text style={styles.title}>Stock Market Basic Dashboard</Text>\n      </View>\n      <View style={styles.chartContainer}>\n        <Text style={styles.companyName}>{stockData2.length > 0 ? stockData2[0].companyName : \"Data Not Available\"}</Text>\n        <LineChart\n          style={{ flex: 1 }}\n          data={formattedData1.reverse()}\n          svg={{ stroke: 'rgb(134, 132, 132)' }}\n          contentInset={{ top: 20, bottom: 20 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis data={formattedData1.map(item => item.date)} />\n          <YAxis />\n          <Tooltip />\n          <Line type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" />\n        </LineChart>\n      </View>\n      <View style={styles.infoContainer}>\n        <Text style={styles.companyName}>{stockData2.length > 0 ? stockData2[0].companyName : \"Data Not Available\"}</Text>\n        <View style={styles.table}>\n          <TableRow title=\"Open\" value={stockData2.length > 0 ? stockData2[0].companyName : \"Data Not Available\"} />\n          <TableRow title=\"Close\" value={stockData2.length > 0 ? stockData2[0].close : \"Data Not Available\"} />\n          <TableRow title=\"Change\" value={stockData2.length > 0 ? stockData2[0].change : \"Data Not Available\"} />\n          <TableRow title=\"Percentage Change\" value={stockData2.length > 0 ? stockData2[0].changePercentage : \"Data Not Available\"} />\n          <TableRow title=\"High\" value={stockData2.length > 0 ? stockData2[0].high : \"Data Not Available\"} />\n          <TableRow title=\"Low\" value={stockData2.length > 0 ? stockData2[0].low : \"Data Not Available\"} />\n          <TableRow title=\"Latest Time\" value={stockData2.length > 0 ? stockData2[0].latestTime : \"Data Not Available\"} />\n          <TableRow title=\"Latest Price\" value={stockData2.length > 0 ? stockData2[0].latestPrice : \"Data Not Available\"} />\n          <TableRow title=\"Currency\" value={stockData2.length > 0 ? stockData2[0].currency : \"Data Not Available\"} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst TableRow = ({ title, value }) => (\n  <View style={styles.tableRow}>\n    <Text style={styles.tableCell}>{title}</Text>\n    <Text style={styles.tableCell}>{value}</Text>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  searchContainer: {\n    marginBottom: 20,\n  },\n  input: {\n    padding: 10,\n    marginRight: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 8,\n  },\n  title: {\n    color: 'green',\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n  },\n  chartContainer: {\n    flex: 1,\n    minHeight: 400,\n    backgroundColor: '#fff',\n    padding: 15,\n    borderRadius: 8,\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 8,\n    shadowOpacity: 1,\n    marginBottom: 20,\n  },\n  infoContainer: {\n    flex: 1,\n    minHeight: 400,\n    backgroundColor: '#fff',\n    padding: 15,\n    borderRadius: 8,\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 8,\n    shadowOpacity: 1,\n  },\n  companyName: {\n    color: 'green',\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginBottom: 10,\n  },\n  table: {\n    marginTop: 10,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    paddingVertical: 8,\n  },\n  tableCell: {\n    flex: 1,\n    textAlign: 'left',\n  },\n});\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}